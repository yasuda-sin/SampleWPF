<Window x:Class="WpfApp1.Views.PersonWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1.Views"
        mc:Ignorable="d"
        Title="PersonView" Height="300" Width="700">
    <DockPanel>
        <Button DockPanel.Dock="Top" Content="追加" Command="{Binding AddCommand}" Margin="5"></Button>
        <ListBox ItemsSource="{Binding People}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <!-- RelativeSource FindAncestor, AncestorType={x:Type ListBox} でListBox型の親要素を辿る, CommandParameter="{Binding .}"で自身をパラメータとして渡す,  Binding DataContext.DeleteCommandで親要素が持つDataContextを参照させる-->
                        <Button Content="X" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}" Margin="5"></Button>
                        <StackPanel>
                            <TextBlock Text="{Binding FullName}"></TextBlock>
                            <TextBlock Text="{Binding Age, StringFormat=({0})}"></TextBlock>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" Text="標準のListBox"></TextBlock>
        <TextBlock Grid.Row="0" Grid.Column="1" Text="カスタマイズしたListBox"></TextBlock>
        
        <ListBox Grid.Row="1" Grid.Column="0" ItemsSource="{Binding People}"></ListBox>
        
        <ListBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding People}">
            <ListBox.Template>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border>
                        <ItemsPresenter></ItemsPresenter>
                    </Border>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"></WrapPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="氏名:{0}（{1}）">
                                    <Binding Path="FullName"></Binding>
                                    <Binding Path="Age"></Binding>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Text="{Binding IsAuthenticated}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <Border Background="{TemplateBinding Background}" Margin="1">
                                    <ContentPresenter></ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Plum"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>-->
    
</Window>
